Metadata-Version: 2.1
Name: ordered-set-stubs
Version: 0.1.3
Summary: Stubs with type annotations for ordered-set Python library
Home-page: https://github.com/rominf/ordered-set-stubs
License: MIT
Author: Roman Inflianskas
Author-email: infroma@gmail.com
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Dist: typing (>=3.6,<4.0); (python_version >= "2.7" and python_version < "2.8") or (python_version >= "3.3" and python_version < "3.5")
Description-Content-Type: text/markdown

# ordered-set-stubs - stubs with type annotations for ordered-set Python library
## Usage
For example, you have the following code in `ordered_set_stubs_test.py` file:
```python
from ordered_set import OrderedSet


# noinspection PyPep8Naming
def receives_OrderedSet_int(ordered_set: 'OrderedSet[int]') -> 'OrderedSet[int]':
    return ordered_set


receives_OrderedSet_int(OrderedSet(['ololo']))
```

Run `mypy` to check the code and check that it returns an error:
```
$ mypy ordered_set_stubs_test.py
ordered_set_stubs_test.py:10: error: List item 0 has incompatible type "str"; expected "int"
```

In Python 3.7 you can even drop quotes:
```python
from __future__ import annotations
from ordered_set import OrderedSet


# noinspection PyPep8Naming
def receives_OrderedSet_int(ordered_set: OrderedSet[int]) -> OrderedSet[int]:
    return ordered_set


receives_OrderedSet_int(OrderedSet(['ololo']))
```

